{"mappings":"C,A,eCMI,EALJ,IAAM,EAAO,SAAS,cAAc,CAAC,eAC/B,EAAU,SAAS,aAAa,CAAC,YACnC,EAAO,EACP,EAAU,CAAA,EACV,EAAgB,CAAA,EAOpB,eAAe,EAAiB,CAAK,EACnC,EAAM,cAAc,GAEpB,EAAO,EACP,EAAgB,CAAA,EAChB,EAAY,KAAA,EAEZ,GACF,CA+BA,SAAS,EAAe,CAAK,EAC3B,MAAO,CAAC;;eAEK,EAAE,EAAM,aAAa,CAAC;kBACnB,EAAE,EAAM,YAAY,CAAC,OAAO,EAAE,EAAM,IAAI,CAAC;;;2CAGhB,EAAE,EAAM,KAAK,CAAC;2CACd,EAAE,EAAM,KAAK,CAAC;8CACX,EAAE,EAAM,QAAQ,CAAC;+CAChB,EAAE,EAAM,SAAS,CAAC;;;EAG/D,CAAC,AACH,CAGA,SAAS,KAEH,GAAY,IAKhB,EAAU,CAAA,EAGV,YAAY,EAAK,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAI,GACjD,IAAI,CAAC,AAAA,IAEA,EAAO,MAAM,CAAG,UAElB,CAAA,EAAgB,CAAA,CAAhB,EAIF,AAhEN,SAAuB,CAAM,EAE3B,GAAI,CAAC,GAAU,AAAkB,IAAlB,EAAO,MAAM,CAAQ,CAClC,SAAS,MAAM,CAAC,IAAI,CAAC,oBACrB,MACF,CAGA,IAAM,EAAY,EAAO,GAAG,CAAC,GAAgB,IAAI,CAAC,GAG9C,AAAS,CAAA,IAAT,GACF,EAAQ,SAAS,CAAG,EAIpB,AADiB,IAAI,eAAe,cAC3B,OAAO,GAGhB,EAAY,CAAM,CAAC,EAAE,CAAC,SAAS,CAE/B,SAAS,MAAM,CAAC,OAAO,CAAC,CAAC,iBAAiB,EAAE,EAAU,QAAQ,CAAC,GAE/D,EAAQ,SAAS,EAAI,CAEzB,EAuCoB,GAGd,EAAU,CAAA,EAGV,IAGA,QAAQ,GAAG,CAAC,CAAC,MAAM,EAAE,EAAK,gBAAgB,EAAE,EAAO,MAAM,CAAC,CAAC,CAC7D,GACC,KAAK,CAAC,AAAA,IAEL,QAAQ,KAAK,CAAC,yBAA0B,GACxC,SAAS,MAAM,CAAC,OAAO,CAAC,2CAGxB,EAAU,CAAA,CACZ,GACJ,CAjGA,EAAK,gBAAgB,CAAC,SAAU,GA8GhC,AAVkB,IAAI,eAAe,WAAY,CAC/C,KAAM,WACJ,MAAO,GACT,EACA,aAAc,OACd,QAAS,CAAA,EACT,gBAAiB,GACnB,GAGU,EAAE,CAAC,kBAAmB,E","sources":["<anon>","src/js/index.js"],"sourcesContent":["(function () {\nvar $44ae6d9db4eaca0f$exports = {};\n// Оголошуємо змінні\nconst $44ae6d9db4eaca0f$var$form = document.getElementById(\"search-form\");\nconst $44ae6d9db4eaca0f$var$gallery = document.querySelector(\".gallery\");\nlet $44ae6d9db4eaca0f$var$page = 1;\nlet $44ae6d9db4eaca0f$var$loading = false;\nlet $44ae6d9db4eaca0f$var$hasMoreImages = true;\nlet $44ae6d9db4eaca0f$var$totalHits;\n// Додаємо обробник подачі форми\n$44ae6d9db4eaca0f$var$form.addEventListener(\"submit\", $44ae6d9db4eaca0f$var$handleFormSubmit);\n// Функція для обробки подачі форми\nasync function $44ae6d9db4eaca0f$var$handleFormSubmit(event) {\n    event.preventDefault();\n    // Скидаємо значення при подачі нового запиту\n    $44ae6d9db4eaca0f$var$page = 1;\n    $44ae6d9db4eaca0f$var$hasMoreImages = true;\n    $44ae6d9db4eaca0f$var$totalHits = undefined;\n    // Викликаємо функцію для завантаження зображень\n    $44ae6d9db4eaca0f$var$loadImages();\n}\n// Функція для оновлення галереї зображень\nfunction $44ae6d9db4eaca0f$var$updateGallery(images) {\n    // Перевіряємо, чи є зображення\n    if (!images || images.length === 0) {\n        Notiflix.Notify.info(\"No images found.\");\n        return;\n    }\n    // Генеруємо HTML для зображень\n    const cardsHtml = images.map($44ae6d9db4eaca0f$var$createCardHtml).join(\"\");\n    // Оновлюємо галерею зображень\n    if ($44ae6d9db4eaca0f$var$page === 1) {\n        $44ae6d9db4eaca0f$var$gallery.innerHTML = cardsHtml;\n        // Ініціалізуємо lightbox для перегляду зображень\n        const lightbox = new SimpleLightbox(\".gallery a\");\n        lightbox.refresh();\n        // Встановлюємо totalHits як кількість з першого зображення\n        $44ae6d9db4eaca0f$var$totalHits = images[0].totalHits;\n        // Виводимо повідомлення\n        Notiflix.Notify.success(`Hooray! We found ${$44ae6d9db4eaca0f$var$totalHits} images.`);\n    } else $44ae6d9db4eaca0f$var$gallery.innerHTML += cardsHtml;\n}\n// Функція для створення HTML-коду для кожного зображення\nfunction $44ae6d9db4eaca0f$var$createCardHtml(image) {\n    return `\n    <div class=\"photo-card\">\n      <a href=\"${image.largeImageURL}\" class=\"lightbox-link\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n      </a>\n      <div class=\"info\">\n        <p class=\"info-item\"><b>Likes:</b> ${image.likes}</p>\n        <p class=\"info-item\"><b>Views:</b> ${image.views}</p>\n        <p class=\"info-item\"><b>Comments:</b> ${image.comments}</p>\n        <p class=\"info-item\"><b>Downloads:</b> ${image.downloads}</p>\n      </div>\n    </div>\n  `;\n}\n// Функція для завантаження зображень\nfunction $44ae6d9db4eaca0f$var$loadImages() {\n    // Перевіряємо, чи вже виконується завантаження або немає додаткових зображень\n    if ($44ae6d9db4eaca0f$var$loading || !$44ae6d9db4eaca0f$var$hasMoreImages) return;\n    // Позначаємо початок завантаження\n    $44ae6d9db4eaca0f$var$loading = true;\n    // Викликаємо функцію для отримання зображень з сервера\n    fetchImages($44ae6d9db4eaca0f$var$form.elements.searchQuery.value.trim(), $44ae6d9db4eaca0f$var$page).then((images)=>{\n        // Перевіряємо, чи отримано додаткові зображення\n        if (images.length < PER_PAGE) // Якщо немає, вказуємо, що більше зображень немає\n        $44ae6d9db4eaca0f$var$hasMoreImages = false;\n        // Викликаємо функцію для оновлення галереї\n        $44ae6d9db4eaca0f$var$updateGallery(images);\n        // Позначаємо завершення завантаження\n        $44ae6d9db4eaca0f$var$loading = false;\n        // Інкрементуємо сторінку\n        $44ae6d9db4eaca0f$var$page++;\n        // Виводимо інформацію в консоль для налагодження\n        console.log(`Page: ${$44ae6d9db4eaca0f$var$page}, Total Images: ${images.length}`);\n    }).catch((error)=>{\n        // Обробляємо помилку і виводимо сповіщення\n        console.error(\"Error fetching images:\", error);\n        Notiflix.Notify.failure(\"Something went wrong. Please try again.\");\n        // Позначаємо завершення завантаження при помилці\n        $44ae6d9db4eaca0f$var$loading = false;\n    });\n}\n// Ініціалізуємо Infinite Scroll для автоматичного завантаження зображень при прокручуванні\nconst $44ae6d9db4eaca0f$var$infScroll = new InfiniteScroll(\".gallery\", {\n    path: function() {\n        return \" \";\n    },\n    responseType: \"text\",\n    history: false,\n    scrollThreshold: 300\n});\n// Додаємо обробник події \"scrollThreshold\", який викликає функцію завантаження зображень\n$44ae6d9db4eaca0f$var$infScroll.on(\"scrollThreshold\", $44ae6d9db4eaca0f$var$loadImages);\n\n})();\n//# sourceMappingURL=index.10137443.js.map\n","// Оголошуємо змінні\nconst form = document.getElementById('search-form');\nconst gallery = document.querySelector('.gallery');\nlet page = 1;\nlet loading = false;\nlet hasMoreImages = true;\nlet totalHits;\n\n// Додаємо обробник подачі форми\nform.addEventListener('submit', handleFormSubmit);\n\n// Функція для обробки подачі форми\nasync function handleFormSubmit(event) {\n  event.preventDefault();\n  // Скидаємо значення при подачі нового запиту\n  page = 1;\n  hasMoreImages = true;\n  totalHits = undefined;\n  // Викликаємо функцію для завантаження зображень\n  loadImages();\n}\n\n// Функція для оновлення галереї зображень\nfunction updateGallery(images) {\n  // Перевіряємо, чи є зображення\n  if (!images || images.length === 0) {\n    Notiflix.Notify.info('No images found.');\n    return;\n  }\n\n  // Генеруємо HTML для зображень\n  const cardsHtml = images.map(createCardHtml).join('');\n\n  // Оновлюємо галерею зображень\n  if (page === 1) {\n    gallery.innerHTML = cardsHtml;\n\n    // Ініціалізуємо lightbox для перегляду зображень\n    const lightbox = new SimpleLightbox('.gallery a');\n    lightbox.refresh();\n\n    // Встановлюємо totalHits як кількість з першого зображення\n    totalHits = images[0].totalHits;\n    // Виводимо повідомлення\n    Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n  } else {\n    gallery.innerHTML += cardsHtml;\n  }\n}\n\n// Функція для створення HTML-коду для кожного зображення\nfunction createCardHtml(image) {\n  return `\n    <div class=\"photo-card\">\n      <a href=\"${image.largeImageURL}\" class=\"lightbox-link\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n      </a>\n      <div class=\"info\">\n        <p class=\"info-item\"><b>Likes:</b> ${image.likes}</p>\n        <p class=\"info-item\"><b>Views:</b> ${image.views}</p>\n        <p class=\"info-item\"><b>Comments:</b> ${image.comments}</p>\n        <p class=\"info-item\"><b>Downloads:</b> ${image.downloads}</p>\n      </div>\n    </div>\n  `;\n}\n\n// Функція для завантаження зображень\nfunction loadImages() {\n  // Перевіряємо, чи вже виконується завантаження або немає додаткових зображень\n  if (loading || !hasMoreImages) {\n    return;\n  }\n\n  // Позначаємо початок завантаження\n  loading = true;\n\n  // Викликаємо функцію для отримання зображень з сервера\n  fetchImages(form.elements.searchQuery.value.trim(), page)\n    .then(images => {\n      // Перевіряємо, чи отримано додаткові зображення\n      if (images.length < PER_PAGE) {\n        // Якщо немає, вказуємо, що більше зображень немає\n        hasMoreImages = false;\n      }\n\n      // Викликаємо функцію для оновлення галереї\n      updateGallery(images);\n\n      // Позначаємо завершення завантаження\n      loading = false;\n\n      // Інкрементуємо сторінку\n      page++;\n\n      // Виводимо інформацію в консоль для налагодження\n      console.log(`Page: ${page}, Total Images: ${images.length}`);\n    })\n    .catch(error => {\n      // Обробляємо помилку і виводимо сповіщення\n      console.error('Error fetching images:', error);\n      Notiflix.Notify.failure('Something went wrong. Please try again.');\n\n      // Позначаємо завершення завантаження при помилці\n      loading = false;\n    });\n}\n\n// Ініціалізуємо Infinite Scroll для автоматичного завантаження зображень при прокручуванні\nconst infScroll = new InfiniteScroll('.gallery', {\n  path: function () {\n    return ' ';\n  },\n  responseType: 'text',\n  history: false,\n  scrollThreshold: 300,\n});\n\n// Додаємо обробник події \"scrollThreshold\", який викликає функцію завантаження зображень\ninfScroll.on('scrollThreshold', loadImages);\n"],"names":["$44ae6d9db4eaca0f$var$totalHits","$44ae6d9db4eaca0f$var$form","document","getElementById","$44ae6d9db4eaca0f$var$gallery","querySelector","$44ae6d9db4eaca0f$var$page","$44ae6d9db4eaca0f$var$loading","$44ae6d9db4eaca0f$var$hasMoreImages","$44ae6d9db4eaca0f$var$handleFormSubmit","event","preventDefault","undefined","$44ae6d9db4eaca0f$var$loadImages","$44ae6d9db4eaca0f$var$createCardHtml","image","largeImageURL","webformatURL","tags","likes","views","comments","downloads","fetchImages","elements","searchQuery","value","trim","then","images","length","PER_PAGE","$44ae6d9db4eaca0f$var$updateGallery","Notiflix","Notify","info","cardsHtml","map","join","innerHTML","lightbox","SimpleLightbox","refresh","totalHits","success","console","log","catch","error","failure","addEventListener","$44ae6d9db4eaca0f$var$infScroll","InfiniteScroll","path","responseType","history","scrollThreshold","on"],"version":3,"file":"index.10137443.js.map"}